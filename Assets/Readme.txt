Краткое руководство:
- Все блоки находятся в файле \Assets\Content\PropsConfig.asset
	- В нем есть список блоков.
	- Для добавления нового блока необходимо добавить элемент в списке, назначить ему уникальный идентификатор, добавить визуал (следуя шаблону ранее добавленных префабов)
	- Для того, чтобы блок появился, нужно добавить уровень с данным блоком
- Уровни хранятся в проекте в папке StreamingAssets/Levels в виде json файлов. 
	- Структура уровня - двумерный массив с позициями блоков и их идентификаторами. 
	- После запуска приложения из той же папки берется файл LevelsConfig, откуда берется информация о количестве вшитых уровней и уровни вшиваются во внутреннюю память устройства. Далее грузятся напрямую оттуда. 
	- Чтобы добавить новый уровень, нужно добавить файл уровня в папку StreamingAssets/Levels в порядке нумерации и увеличить число уровней в текстовом редакторе в файле LevelsConfig
	- Шаблон уровня (для самостоятельной генерации):
	{"Props":
		[[{"PropId":1},{"PropId":1},{"PropId":2},{"PropId":1},{"PropId":1}],
		[{"PropId":2},{"PropId":2},{"PropId":1},{"PropId":2},{"PropId":1}],
		[{"PropId":1},{"PropId":1},{"PropId":2},{"PropId":1},null],
		[{"PropId":1},{"PropId":1},{"PropId":2},{"PropId":1},null]]}
		где null - пустая клетка. Каждая строка - столбец элементов уровня. Данный уровень - json уровня 2 из задания
- Сохранение прогресса.
	- Прогресс сохраняется так же с помощью json системы. Изменения сохраняются каждую потерю фокуса. Так же при прямом вызове, если понадобится.
	- Формат хранения информации гибкий: можно хранить строки, цифры, логические типы, сложные классы. 
	- Номер текущего уровня игрока поднимается в момент совершения победного свайпа (просчет результата свайпа происходит до того, как начинается его анимация). Следовательно, если сделать победное движение, затем игра будет по какой-либо причине выключена, прогресс игрока увеличится. Сделано специально, чтобы игрок не терял прогресс уровня, если прошел его
	- При прохождении последнего из текущих уровней, запускается Repeat режим. Где все уровни по порядку проходятся заново до бесконечности. Если добавляется новый уровень, репит режим отключается и игрок продолжает играть со следующего уровня после последнего пройденного в стандартном режиме (после прохождения 3 уровня стартует повторный 1, затем игрок его проходит и переходит на 2, затем выходит обновление и добавляется 4 и 5 уровни, игра обновляет файлы и игрок переходит на 4 уровень)

P.s. В уровне 3 есть нестандартное состояние, когда есть не просто 3 в ряд и 1 сосед, но есть сосед соседа. Т.е. например 3 по горизонтали, потом от последнего элемента поднимается наверх один и от него вправо еще один. Я сделал, чтобы все элементы, примыкающие ребром к тем, которые мержатся, мержились с ними. Так же, 3 уровень решается 1м действием (свайп влево самого верхнего правого элемента).
Когда уровень попадает в состояние, когда не может быть пройден (недостаточно элементов для хотя бы 1 мержа), выходит экран поражения, дающий возможность только рестартануть уровень